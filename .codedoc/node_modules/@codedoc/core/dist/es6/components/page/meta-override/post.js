function overrideMeta(html, target, behavior, override) {
    let el$ = html.querySelector(`meta[name="${target}"]`);
    if (!el$) {
        el$ = html.createElement('meta');
        el$.setAttribute('name', target);
    }
    let content = el$.getAttribute('content') || '';
    if (behavior === 'replace')
        content = override;
    else {
        if (target === 'keywords')
            content = [
                ...content.split(',').map(_ => _.trim()),
                ...override.split(',').map(_ => _.trim())
            ].join(', ');
        else
            content = [content.trim(), override.trim()].join(' ');
    }
    el$.setAttribute('content', content);
}
export function pageSpecificMeta(html) {
    html.body.querySelectorAll('[data-meta-override]').forEach(override$ => {
        overrideMeta(html, override$.getAttribute('data-meta-override'), (override$.getAttribute('data-meta-override-behavior') || 'replace'), override$.textContent || '');
    });
}
//# sourceMappingURL=post.js.map