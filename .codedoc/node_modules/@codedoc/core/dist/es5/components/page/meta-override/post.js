"use strict";
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
function overrideMeta(html, target, behavior, override) {
    var el$ = html.querySelector("meta[name=\"" + target + "\"]");
    if (!el$) {
        el$ = html.createElement('meta');
        el$.setAttribute('name', target);
    }
    var content = el$.getAttribute('content') || '';
    if (behavior === 'replace')
        content = override;
    else {
        if (target === 'keywords')
            content = __spreadArrays(content.split(',').map(function (_) { return _.trim(); }), override.split(',').map(function (_) { return _.trim(); })).join(', ');
        else
            content = [content.trim(), override.trim()].join(' ');
    }
    el$.setAttribute('content', content);
}
function pageSpecificMeta(html) {
    html.body.querySelectorAll('[data-meta-override]').forEach(function (override$) {
        overrideMeta(html, override$.getAttribute('data-meta-override'), (override$.getAttribute('data-meta-override-behavior') || 'replace'), override$.textContent || '');
    });
}
exports.pageSpecificMeta = pageSpecificMeta;
//# sourceMappingURL=post.js.map